Turbo Assembler	 Version 4.1	    24/11/24 09:23:56	    Page 1
D:\zzzy\zzzz.asm



      1	0000			     DSEG SEGMENT
      2	0000  48 65 6C 6C 6F 2C	57+	     helloworld	DB 'Hello,World!' ,0DH,0AH,24H
      3	      6F 72 6C 64 21 0D	0A+
      4	      24
      5	000F  0D 0A 24			     next_row	DB 0DH,0AH,24H
      6	0012  0100*(24)			     buffer	DB 0100H dup('$')
      7
      8	0112  70 6C 65 61 73 65	20+	     STUID	DB 'please input your id >','$'
      9	      69 6E 70 75 74 20	79+
     10	      6F 75 72 20 69 64	20+
     11	      3E 24
     12	0129  70 6C 65 61 73 65	20+	     STUNAME	DB 'please input your name >','$'
     13	      69 6E 70 75 74 20	79+
     14	      6F 75 72 20 6E 61	6D+
     15	      65 20 3E 24
     16	0142  70 6C 65 61 73 65	20+	     cmdprompt	DB 'please input an alpha to get its ascii code, q to quit >','$'
     17	      69 6E 70 75 74 20	61+
     18	      6E 20 61 6C 70 68	61+
     19	      20 74 6F 20 67 65	74+
     20	      20 69 74 73 20 61	73+
     21	      63 69 69 20 63 6F	64+
     22	      65 2C 20 71 20 74	6F+
     23	      20 71 75 69 74 20	3E+
     24	      24
     25	017B			     DSEG ENDS
     26
     27	0000			     SSEG SEGMENT PARA STACK
     28	0000  0100*(????)			  DW 256 DUP(?)
     29	0200			     SSEG ENDS
     30
     31	0000			     CSEG SEGMENT
     32							   ASSUME CS:CSEG,DS:DSEG
     33
     34
     35					     ;调用约定:需要打印的字符->al
     36	0000			     putchar proc
     37	0000  52					   push	  dx
     38	0001  50					   push	  ax
     39	0002  B4 02					   mov	  ah,02h
     40	0004  8A D0					   mov	  dl,al
     41	0006  CD 21					   int	  21h
     42	0008  58					   pop	  ax
     43	0009  5A					   pop	  dx
     44	000A  C3					   ret
     45	000B			     putchar endp
     46
     47					     ;调用约定：输入字符用al返回
     48	000B			     getchar proc near
     49	000B  B4 01					   mov	  ah,01h
     50	000D  B0 00					   mov	  al,0
     51	000F  CD 21					   int	  21H
     52	0011  C3					   retn
     53
     54	0012			     getchar endp
     55
     56
     57
Turbo Assembler	 Version 4.1	    24/11/24 09:23:56	    Page 2
D:\zzzy\zzzz.asm



     58				     ;16进制打印一个字节,调用约定:
     59	0012			     hex PROC near
     60
     61	0012  50					   push	  ax
     62	0013  52					   push	  dx
     63	0014  8B D0					   mov	  dx,ax
     64	0016  B5 04					   mov	  ch, 4
     65
     66	0018				     L1:
     67	0018  B1 04					   mov	  cl, 4
     68	001A  D3 C2					   rol	  dx, cl
     69	001C  8A C2					   mov	  al,dl
     70	001E  24 0F					   and	  al,0FH
     71	0020  04 30					   add	  al,30h
     72	0022  3C 3A					   cmp	  al,3ah
     73	0024  7C 02					   jl	  printit
     74	0026  04 07					   add	  al,7h
     75	0028				     printit:
     76	0028  E8 FFD5					   call	  putchar
     77	002B  FE CD					   dec	  ch
     78	002D  75 E9					   jnz	  L1
     79	002F  5A					   pop	  dx
     80	0030  58					   pop	  ax
     81	0031  C3					   ret
     82	0032			     hex ENDP
     83
     84
     85
     86					     ;二进制形式的输出,入口参数为ax
     87	0032			     binary proc
     88	0032  53					   push	  bx				;数据入栈，保留数值
     89	0033  52					   push	  dx
     90
     91	0034  B6 00					   mov	  dh,0				;用于计数，总共16次
     92
     93	0036				     binaryagain:
     94	0036  80 FE 08					   cmp	  dh,8
     95	0039  74 16					   je	  binaryover			;输出结束，到达函数末端
     96	003B  D1 C0					   rol	  ax,1				;移动一位
     97	003D  8B D8					   mov	  bx,ax				;数值保留
     98	003F  25 0001					   and	  ax,0001h			;剥离出最后一位
     99	0042  8A D0					   mov	  dl,al				;用于输出
    100	0044  80 C2 30					   add	  dl,48
    101	0047  B4 02					   mov	  ah,2
    102	0049  CD 21					   int	  21h
    103	004B  FE C6					   inc	  dh				;计数加一
    104	004D  8B C3					   mov	  ax,bx				;数值恢复
    105	004F  EB E5					   jmp	  binaryagain			;再来一次
    106
    107	0051				     binaryover:
    108	0051  5A					   pop	  dx				;数据出栈，数值还原
    109	0052  5B					   pop	  bx
    110	0053  C3					   ret
    111	0054			     binary endp
    112
    113
    114					     ;调用约定:ax指定一个buffer的基地址,用于获取一个字符串
Turbo Assembler	 Version 4.1	    24/11/24 09:23:56	    Page 3
D:\zzzy\zzzz.asm



    115	0054			     print proc	near
    116	0054  53					   push	  bx
    117	0055  51					   push	  cx
    118	0056  52					   push	  dx
    119
    120	0057  8B D0					   mov	  dx,ax
    121	0059  B4 09					   mov	  ah,09H
    122	005B  B0 00					   mov	  al,00H
    123	005D  CD 21					   int	  21H
    124
    125	005F  5A					   pop	  dx
    126	0060  59					   pop	  cx
    127	0061  5B					   pop	  bx
    128	0062  C3					   ret
    129	0063			     print endp
    130
    131
    132					     ;调用约定:ax指定一个buffer的基地址,用于获取一个字符串
    133	0063			     println proc near
    134	0063  E8 FFEE					   call	  print
    135	0066  B0 0D					   mov	  al,0Dh
    136	0068  E8 FF95					   call	  putchar
    137	006B  B0 0D					   mov	  al,0DH
    138	006D  E8 FF90					   call	  putchar
    139	0070  C3					   ret
    140	0071			     println endp
    141
    142	0071			     newline proc near
    143	0071  50					   push	  ax
    144	0072  B8 000Fr					   lea	  ax,next_row
    145	0075  E8 FFDC					   call	  print
    146	0078  58					   pop	  ax
    147	0079  C3					   ret
    148	007A			     newline endp
    149
    150					     ;AX存放目的地址,结束时CX返回输入字符个数
    151	007A			     input proc	near
    152	007A  53					   push	  BX
    153					     ;	   push	  cx
    154					     ;	   push	  di
    155					     ;	   push	  ax
    156					     ;	   MOV	  CX, 0ffh
    157					     ;	   mov	  DI, ax
    158					     ;	   mov	  al,'$'
    159					     ;	   REPZ	  STOSB
    160
    161					     ;	   pop	  ax
    162
    163	007B  8B D0					   MOV	  DX,AX
    164	007D  8B DA					   MOV	  BX,DX
    165	007F  C6 07 FF					   MOV	  byte ptr DS:[BX], 0ffh
    166					     ;	   mov	  [DX],BL
    167	0082  B4 0A					   mov	  ah,0ah			;将0ah放入ah
    168	0084  B0 00					   mov	  al,0
    169	0086  CD 21					   int	  21h				;输入字符串功能调用
    170	0088  5B					   pop	  BX
    171	0089  C3					   ret
Turbo Assembler	 Version 4.1	    24/11/24 09:23:56	    Page 4
D:\zzzy\zzzz.asm



    172	008A			     input endp
    173
    174
    175	008A			     circle proc near
    176	008A				     rolling:
    177	008A  B8 0142r					   lea	  ax,cmdprompt
    178	008D  E8 FFD3					   call	  println
    179	0090  E8 FF78					   call	  getchar
    180	0093  3C 71					   cmp	  al,'q'
    181	0095  74 0D					   jz	  fini
    182	0097  B4 00					   mov	  ah,0
    183	0099  E8 FFD5					   call	newline
    184	009C  E8 FF73					   call	  hex
    185	009F  E8 FFCF					   call	  newline
    186	00A2  EB E6					   jmp	  rolling
    187	00A4				     fini:
    188	00A4  C3					   retn
    189
    190	00A5			     circle endp
    191
    192
    193					     ;调用约定：ax存放基地址，cx存放长度，bl存放目标字符
    194	00A5			     memset proc near
    195	00A5  57					   push	  di
    196	00A6  8B F8					   mov	  di,ax
    197	00A8				     memset_circle:
    198	00A8  83 F9 00					   cmp	  cx,0
    199	00AB  74 06					   jz	  memset_fini
    200	00AD  88 1D					   mov	  ds:[di],bl
    201	00AF  47					   inc	  di
    202	00B0  49					   dec	  cx
    203	00B1  EB F5					   jmp	  memset_circle
    204
    205	00B3				     memset_fini:
    206	00B3  5F					   pop	  di
    207	00B4  C3					   ret
    208	00B5			     memset endp
    209
    210
    211	00B5			     exit proc near
    212	00B5  B4 4C					   mov	  ah,4Ch
    213	00B7  B0 00					   mov	  al,0
    214	00B9  CD 21					   int	  21h
    215	00BB			     exit endp
    216
    217	00BB				     BEGIN:
    218	00BB  B8 0000s					   MOV	  AX,DSEG
    219	00BE  8E D8					   MOV	  DS,AX
    220
    221
    222	00C0  E8 FFAE					   call	  newline
    223	00C3  B8 0112r					   lea	  AX,STUID
    224	00C6  E8 FF8B					   call	  print
    225
    226
    227	00C9  E8 FFA5					   call	  newline
    228	00CC  B8 0012r					   lea	  AX,buffer
Turbo Assembler	 Version 4.1	    24/11/24 09:23:56	    Page 5
D:\zzzy\zzzz.asm



    229	00CF  B9 00FF					   mov	  cx,0ffh
    230	00D2  B3 24					   mov	  bl,'$'
    231	00D4  E8 FFCE					   call	  memset
    232	00D7  B8 0012r					   lea	  AX,buffer
    233	00DA  E8 FF9D					   call	  input
    234
    235
    236	00DD  E8 FF91					   call	  newline
    237	00E0  B8 0014r					   lea	  ax,[buffer+2]
    238	00E3  E8 FF6E					   call	  print
    239
    240
    241	00E6  E8 FF88					   call	  newline
    242	00E9  B8 0129r					   lea	  AX,STUNAME
    243	00EC  E8 FF65					   call	  print
    244
    245
    246	00EF  E8 FF7F					   call	  newline
    247	00F2  B8 0012r					   lea	  AX,buffer
    248	00F5  B9 00FF					   mov	  cx,0ffh
    249	00F8  B3 24					   mov	  bl,'$'
    250	00FA  E8 FFA8					   call	  memset
    251	00FD  B8 0012r					   lea	  AX,buffer
    252	0100  E8 FF77					   call	  input
    253
    254
    255	0103  E8 FF6B					   call	  newline
    256	0106  B8 0014r					   lea	  ax,[buffer+2]
    257	0109  E8 FF48					   call	  print
    258	010C  E8 FF62					   call	  newline
    259
    260	010F  E8 FF78					   call	  circle
    261
    262
    263	0112  E8 FFA0					   call	  exit
    264	0115			     CSEG ENDS
    265					     END  BEGIN
Turbo Assembler	 Version 4.1	    24/11/24 09:23:56	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "24/11/24"
??FILENAME			  Text	 "zzzz	  "
??TIME				  Text	 "09:23:56"
??VERSION			  Number 040A
@CPU				  Text	 0101H
@CURSEG				  Text	 CSEG
@FILENAME			  Text	 ZZZZ
@WORDSIZE			  Text	 2
BEGIN				  Near	 CSEG:00BB
BINARY				  Near	 CSEG:0032
BINARYAGAIN			  Near	 CSEG:0036
BINARYOVER			  Near	 CSEG:0051
BUFFER				  Byte	 DSEG:0012
CIRCLE				  Near	 CSEG:008A
CMDPROMPT			  Byte	 DSEG:0142
EXIT				  Near	 CSEG:00B5
FINI				  Near	 CSEG:00A4
GETCHAR				  Near	 CSEG:000B
HELLOWORLD			  Byte	 DSEG:0000
HEX				  Near	 CSEG:0012
INPUT				  Near	 CSEG:007A
L1				  Near	 CSEG:0018
MEMSET				  Near	 CSEG:00A5
MEMSET_CIRCLE			  Near	 CSEG:00A8
MEMSET_FINI			  Near	 CSEG:00B3
NEWLINE				  Near	 CSEG:0071
NEXT_ROW			  Byte	 DSEG:000F
PRINT				  Near	 CSEG:0054
PRINTIT				  Near	 CSEG:0028
PRINTLN				  Near	 CSEG:0063
PUTCHAR				  Near	 CSEG:0000
ROLLING				  Near	 CSEG:008A
STUID				  Byte	 DSEG:0112
STUNAME				  Byte	 DSEG:0129

Groups & Segments		  Bit Size Align  Combine Class

CSEG				  16  0115 Para	  none
DSEG				  16  017B Para	  none
SSEG				  16  0200 Para	  Stack
